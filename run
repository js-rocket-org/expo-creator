#!/bin/sh

# This script simply provides shortcuts to common commands for mobile development

APP_NAME=expoapp

# TODO remove this line in created project folder
if [ -d $APP_NAME ]; then cd $APP_NAME ;  fi

check_if_deno_installed() {
  which -s deno
  if [ ! $? = 0 ]; then
    echo "deno is not installed. Download from here:  https://github.com/denoland/deno/releases"
    echo "quick links:"
    echo "curl -L -O https://github.com/denoland/deno/releases/download/v2.2.11/deno-x86_64-unknown-linux-gnu.zip"
    echo "curl -L -O https://github.com/denoland/deno/releases/download/v2.2.11/deno-x86_64-apple-darwin.zip"
    exit 1
  fi
}

check_if_deno_installed


add_deno_rules() {
  if [ ! -f deno.jsonc ]; then
    echo '{
  // https://docs.deno.com/runtime/fundamentals/configuration/
  "fmt": {
    "singleQuote": true,
    "lineWidth": 120
  },
  "lint": {
    "exclude": [
      "node_modules/"
    ],
    "rules": {
      "exclude": [
        "no-empty-enum"
      ]
    }
  }
}' > deno.jsonc
  fi
}


app_create() {
  # NPM template to use: default, blank, blank-typescript, tabs, bare-minimum
  # specify template version with @ symbol .  e.g --template tabs@52
  pnpm create expo-app --no-install --template tabs $APP_NAME

  # Fix filename to pass linting
  mv $APP_NAME/components/__tests__/StyledText-test.js $APP_NAME/components/__tests__/StyledText-test.jsx

  # copy this script into the new project folder
  cp run $APP_NAME/
  cp run.ios run.and run.web $APP_NAME/

  # Move source code into src folder
  mkdir $APP_NAME/src
  mv $APP_NAME/app $APP_NAME/src/
  mv $APP_NAME/assets $APP_NAME/src/
  mv $APP_NAME/components $APP_NAME/src/
  mv $APP_NAME/constants $APP_NAME/src/
  cd $APP_NAME

  # update tsconfig.json alias for @
  awk '{gsub(/\.\/\*/, "./src/*"); print}' tsconfig.json > tsconfig.tmp && mv -f tsconfig.tmp tsconfig.json

  # update app.json ./assets to ./src/assets
  awk '{gsub("./assets", "./src/assets"); print}' app.json > app.tmp && mv -f app.tmp app.json

  # Remove react-native-reanimated reduces node_modules folder from 2Gb to 1.1gb
  # Keep react-native-screens as it is needed by IOS
  pnpm remove expo-linking expo-system-ui react-native-reanimated

  # remove reference to react-native-reanimated
  SEARCH="import 'react-native-reanimated';"
  REPLACE="// import 'react-native-reanimated';"
  awk -v SEARCH="$SEARCH" -v REPLACE="$REPLACE" "{gsub(SEARCH, REPLACE); print}" src/app/_layout.tsx > src/app/_layout.tmp && \
    mv -f src/app/_layout.tmp src/app/_layout.tsx

  # copy additions
  cp -R ../_additions/* ./
  add_deno_rules

  git add -A app/ assets/ components/ constants/ .gitignore *
}


app_format() {
  if [ "$1" = "fix" ]; then
    deno fmt src/
  else
    deno fmt --check src/
  fi
}


app_lint() {
  if [ "$1" = "fix" ]; then
    deno lint --fix src/
  else
    deno lint src/
  fi
}

app_typecheck() {
  ./node_modules/.bin/tsc --noEmit --allowJs
}


if [ "$1" = "create" ]; then app_create ; exit $? ;fi

if [ "$1" = "format" ]; then app_format $2 ; exit $? ;fi
if [ "$1" = "lint" ]; then app_lint $2 ; exit $? ;fi
if [ "$1" = "typecheck" ]; then app_lint $2 ; exit $? ;fi

# Android commands
if [ "$1" = "start.a" ]; then . ./run.and start ; exit $? ;fi
if [ "$1" = "build.a" ]; then . ./run.and build $2 ; exit $? ;fi

# ios commands
if [ "$1" = "start.i" ]; then . ./run.ios start ; exit $? ;fi
if [ "$1" = "build.i" ]; then . ./run.ios build $2 ; exit $? ;fi

# web commands
if [ "$1" = "start.w" ]; then . ./run.web start ; exit $? ;fi
if [ "$1" = "build.w" ]; then . ./run.web build $2 ; exit $? ;fi


if [ "$1" = "doctor" ]; then ./node_modules/.bin/expo doctor ; exit $? ;fi

echo "Unknown command"
